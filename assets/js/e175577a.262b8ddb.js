"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[665],{4674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Chirpstack-HPR Setup","title":"Chirpstack-HPR Setup","description":"This page documents the Docker setup and environment variable configuration required to run chirpstack-hpr in a Docker container. It provides details on the Docker environment required and optional environment variables, and configuration approaches for containerised deployment.","source":"@site/docs/03-chirpstack-hpr.md","sourceDirName":".","slug":"/chirpstack-hpr-setup","permalink":"/chirpstack-hpr.github.io/docs/chirpstack-hpr-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/ccall48/chirpstack-hpr.github.io/tree/master/docs/docs/03-chirpstack-hpr.md","tags":[{"inline":true,"label":"chirpstack-hpr-setup","permalink":"/chirpstack-hpr.github.io/docs/tags/chirpstack-hpr-setup"},{"inline":true,"label":"docker compose","permalink":"/chirpstack-hpr.github.io/docs/tags/docker-compose"},{"inline":true,"label":"environment variables","permalink":"/chirpstack-hpr.github.io/docs/tags/environment-variables"}],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Chirpstack-HPR Setup","slug":"chirpstack-hpr-setup","id":"Chirpstack-HPR Setup","tags":["chirpstack-hpr-setup","docker compose","environment variables"]},"sidebar":"tutorialSidebar","previous":{"title":"ChirpStack Helium on Docker Compose","permalink":"/chirpstack-hpr.github.io/docs/chirpstack-helium"},"next":{"title":"AWS SQS","permalink":"/chirpstack-hpr.github.io/docs/integration/aws-sqs"}}');var r=n(4848),s=n(8453);const c={sidebar_position:3,sidebar_label:"Chirpstack-HPR Setup",slug:"chirpstack-hpr-setup",id:"Chirpstack-HPR Setup",tags:["chirpstack-hpr-setup","docker compose","environment variables"]},o=void 0,a={},l=[{value:"Git Clone Chirpstack-HPR",id:"git-clone-chirpstack-hpr",level:2},{value:"Environment Variable Configuration",id:"environment-variable-configuration",level:2},{value:"Example Docker Compose for Chirpstack-HPR",id:"example-docker-compose-for-chirpstack-hpr",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"This page documents the Docker setup and environment variable configuration required to run chirpstack-hpr in a Docker container. It provides details on the Docker environment required and optional environment variables, and configuration approaches for containerised deployment."})}),"\n",(0,r.jsxs)(t.admonition,{type:"warning",children:[(0,r.jsx)(t.p,{children:"Please ensure you have followed the initial setup procedures outlined in the official documentation for running a Helium IOT Network LNS."}),(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.helium.com/iot/run-an-lns",children:"Run a LoRaWAN Network Server"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.helium.com/iot/lorawan-roaming",children:"LoRaWAN Roaming on Helium"}),"."]}),"\n"]}),(0,r.jsx)(t.p,{children:"Before continuing further you should already have a fully operational Chirpstack LNS operating on docker compose."})]}),"\n",(0,r.jsx)(t.h2,{id:"git-clone-chirpstack-hpr",children:"Git Clone Chirpstack-HPR"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",metastring:'title="docker-compose.yml"',children:"git clone https://github.com/ccall48/chirpstack-hpr.git\ncd chirpstack-hpr\n"})}),"\n",(0,r.jsx)(t.h2,{id:"environment-variable-configuration",children:"Environment Variable Configuration"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"ENV VAR"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Value"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"HELIUM_NET_ID"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"00003C"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Only change if using netid assigned by Lora Alliance"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"HELIUM_OUI"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"0000"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"OUI Assigned to you by Helium Foundation"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"HELIUM_MAX_COPIES"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"15"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Default copies purchased if not set per device"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"ROUTE_ID"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"UUID"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://docs.helium.com/iot/run-an-lns/configure-routing-rules/#generate-route-in-helium-config-service",children:"The generated route id by iot-config on setup"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"CHIRPSTACK_APIKEY"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"JWT Token"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Global APIKEY generated via Webui or Terminal"})]})]})]}),"\n",(0,r.jsx)(t.admonition,{title:"Generate Global APIKEY from terminal",type:"tip",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"docker exec chirpstack chirpstack --config /etc/chirpstack create-api-key --name globalKey"})})}),"\n",(0,r.jsx)(t.h2,{id:"example-docker-compose-for-chirpstack-hpr",children:"Example Docker Compose for Chirpstack-HPR"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yml",metastring:'title="docker-compose.yml"',children:"services:\n  chirpstack-hpr:\n    image: ghcr.io/ccall48/chirpstack-hpr:latest\n    container_name: chirpstack-hpr\n    restart: unless-stopped\n    volumes:\n      - './app:/app'\n      - '/path/to/helium/delegate_key.bin:/app/delegate_key.bin:ro'\n    environment:\n      - HELIUM_CONFIG_HOST=config.iot.mainnet.helium.io\n      - HELIUM_PORT=6080\n      - HELIUM_KEYPAIR_BIN=/app/delegate_key.bin\n      - HELIUM_NET_ID=00003C\n      - HELIUM_OUI=<OUI>\n      - HELIUM_MAX_COPIES=15\n      - ROUTE_ID=<ROUTE_ID>\n      # ChirpStack (Required)\n      - CHIRPSTACK_SERVER=chirpstack:8080\n      - CHIRPSTACK_APIKEY=\"Generate & paste Global APIKEY Here\"\n      - REDIS_HOST=chirpstack-redis\n      # Database (Required)\n      - POSTGRES_USER=chirpstack\n      - POSTGRES_PASS=chirpstack\n      - POSTGRES_HOST=chirpstack-postgres\n      - POSTGRES_PORT=5432\n      - POSTGRES_SSL_MODE=\"false\"\n      - POSTGRES_DB=chirpstack\n      # Usage Event Publisher (Optional)\n      -  PUBLISH_USAGE_EVENTS=False\n    command: bash -c 'cd /app && python app.py'\n\nnetworks:\n  default:\n    name: helium-iot-net\n    external: true\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function c(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);