"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[373],{7891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Integrations/HTTP Integration","title":"HTTP Integration","description":"This documentation does not cover how to create or setup an HTTP endpoint. I have supplied a basic","source":"@site/docs/Integrations/02-http.md","sourceDirName":"Integrations","slug":"/integration/http","permalink":"/chirpstack-hpr.github.io/docs/integration/http","draft":false,"unlisted":false,"editUrl":"https://github.com/ccall48/chirpstack-hpr.github.io/tree/master/docs/docs/Integrations/02-http.md","tags":[{"inline":true,"label":"gRPC","permalink":"/chirpstack-hpr.github.io/docs/tags/g-rpc"},{"inline":true,"label":"http","permalink":"/chirpstack-hpr.github.io/docs/tags/http"},{"inline":true,"label":"integration","permalink":"/chirpstack-hpr.github.io/docs/tags/integration"}],"version":"current","sidebarPosition":2,"frontMatter":{"id":"HTTP Integration","sidebar_position":2,"sidebar_label":"HTTP","slug":"/integration/http","tags":["gRPC","http","integration"]},"sidebar":"tutorialSidebar","previous":{"title":"AWS SQS","permalink":"/chirpstack-hpr.github.io/docs/integration/aws-sqs"},"next":{"title":"Postgres","permalink":"/chirpstack-hpr.github.io/docs/integration/postgres"}}');var o=n(4848),a=n(8453);const s={id:"HTTP Integration",sidebar_position:2,sidebar_label:"HTTP",slug:"/integration/http",tags:["gRPC","http","integration"]},r=void 0,p={},d=[{value:"HTTP Integration",id:"http-integration",level:2},{value:"Example Flask Endpoint",id:"example-flask-endpoint",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"This documentation does not cover how to create or setup an HTTP endpoint. I have supplied a basic\nsnippet of what a python flask endpoint might look like."})}),"\n",(0,o.jsx)(t.h2,{id:"http-integration",children:"HTTP Integration"}),"\n",(0,o.jsx)(t.p,{children:"To use this integration the following environment variables will need to be added and setup in the\nchirpstack-hpr docker compose file."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yml",metastring:'title="Environment Variables Required"',children:"    # Usage Event Publisher\n    - PUBLISH_USAGE_EVENTS=True\n    - PUBLISH_USAGE_EVENTS_PROVIDER=HTTP\n    # Usage Event Http Publisher\n    - HTTP_PUBLISHER_ENDPOINT=<https://example.com/uplink>\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The integration message gets sent over http as a gRPC encoded message. It will need to be decoded\nusing the protobuf file, a python decoder is available in the Publishers section of the\n",(0,o.jsx)(t.a,{href:"https://github.com/ccall48/chirpstack-hpr/tree/master/app/Publishers",children:"repository"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"example-flask-endpoint",children:"Example Flask Endpoint"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",metastring:'title="Example python flask decoding"',children:"from flask import Flask, request, jsonify\nimport tenant_usage_pb2\n\n@app.post('/tenant_dc')\ndef tenant_dc():\n    event = tenant_usage_pb2.TenantUsage()\n    if request.method == 'POST':\n        msg = request.get_data()\n        pl = event.FromString(msg)\n\n        # Do something with the data here\n        data = {\n            'datetime': pl.datetime,\n            'dev_eui': pl.dev_eui,\n            'tenant_id': pl.tenant_id,\n            'application_id': pl.application_id,\n            'dc_used': pl.dc_used,\n        }\n\n        print(data)\n\n        return jsonify({'proto': 'received', 'code': 200}), 200\n    return jsonify({'error': 'invalid request', 'code': 500}), 500\n"})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(6540);const o={},a=i.createContext(o);function s(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);