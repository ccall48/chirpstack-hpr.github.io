"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625],{2458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"intro","title":"Chirpstack-HPR Documentation","description":"Project Intro","source":"@site/docs/01-project-intro.md","sourceDirName":".","slug":"/intro","permalink":"/chirpstack-hpr.github.io/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/ccall48/chirpstack-hpr.github.io/tree/master/docs/docs/01-project-intro.md","tags":[{"inline":true,"label":"intro","permalink":"/chirpstack-hpr.github.io/docs/tags/intro"},{"inline":true,"label":"getting started","permalink":"/chirpstack-hpr.github.io/docs/tags/getting-started"},{"inline":true,"label":"how to","permalink":"/chirpstack-hpr.github.io/docs/tags/how-to"}],"version":"current","sidebarPosition":1,"frontMatter":{"id":"intro","title":"Chirpstack-HPR Documentation","pagination_label":"Project Intro","sidebar_position":1,"sidebar_label":"Project Intro","description":"Project Intro","image":"https://docs.helium.com/img/link-image.png","slug":"/intro","tags":["intro","getting started","how to"]},"sidebar":"tutorialSidebar","next":{"title":"ChirpStack Helium on Docker Compose","permalink":"/chirpstack-hpr.github.io/docs/chirpstack-helium"}}');var o=n(4848),r=n(8453);const s={id:"intro",title:"Chirpstack-HPR Documentation",pagination_label:"Project Intro",sidebar_position:1,sidebar_label:"Project Intro",description:"Project Intro",image:"https://docs.helium.com/img/link-image.png",slug:"/intro",tags:["intro","getting started","how to"]},a=void 0,c={},d=[{value:"Project Description",id:"project-description",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Project Thanks",id:"project-thanks",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"project-description",children:"Project Description"}),"\n",(0,o.jsx)(t.p,{children:"This project aims to be a simple container to leverage the helium packet config cli using python to\ninterface between Chirpstack v4 and the helium packet router. It's main focus is to replicate\nactions taken in Chirpstack by a tenant to add/update/remove device EUI's to the helium packet\nrouter when a device is actioned on by a tenant."}),"\n",(0,o.jsx)(t.p,{children:"You will need to make sure this container connects to the same docker network or network as your\nChirpstack container is running on so that it can interact with chirpstack when changes are made."}),"\n",(0,o.jsx)(t.p,{children:"Max Copies per skfs are set to 0 by default and updated on a device activation if not set by the\ntenant. In the case where they're not set by the tenant on a device the max copies per device will\nmatch the number provided when creating the route id."}),"\n",(0,o.jsx)(t.p,{children:"If you wish to set max copies on a per device basis in a situation where you require more or less\ncopies than the default set route amount you will need to set a value for the max copies in the\ndevice configuration variables."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"device -> configuration -> variables"})}),"\n",(0,o.jsxs)(t.p,{children:["Click on add variable, set key name to ",(0,o.jsx)(t.code,{children:"max_copies"}),", set the value as an integer for the number of\npackets per device you want to purchase if it is under or above the default route id max packets\nsetting."]}),"\n",(0,o.jsx)(t.p,{children:"latest test working Chirpstack version v4.11.0"}),"\n",(0,o.jsx)(t.p,{children:"If you find this useful give us a star or clone the repo and contribute."}),"\n",(0,o.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Git clone this repository: ",(0,o.jsx)(t.code,{children:"git clone https://gitbub.com/ccall48/chirpstack-hpr"})]}),"\n",(0,o.jsxs)(t.li,{children:["Create an external attachable docker network eg. ",(0,o.jsx)(t.code,{children:"docker network create helium-iot-net"})," to attach\nchirpstack-docker and chirpstack-hpr to."]}),"\n",(0,o.jsx)(t.li,{children:"Edit network section in the docker compose to attach to the same docker network created above in\nchirpstack-docker compose."}),"\n",(0,o.jsxs)(t.li,{children:["Rename ",(0,o.jsx)(t.code,{children:".env.sample"})," to ",(0,o.jsx)(t.code,{children:".env"})," and edit with required settings applicable to your installation.\nYou should name the hosts needed by there docker container name and not docker IP address as this\ncan change between restarts causing breakage."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"docker compose up"})," should pull the current container from Github and start the container check\nfor any errors. if you need to change things its usually best to recreate the containers ctrl-c to\nterminate current running container and discard with docker compose down --remove-orphans make\nand save any changes as needed. once you have it right start docker in detached mode with\n",(0,o.jsx)(t.code,{children:"docker compose up -d"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"If you found this helpful share a tip."}),"\n",(0,o.jsxs)(t.p,{children:["Solana: ",(0,o.jsx)(t.code,{children:"GKunRFVcfMem7oS5Yd3WV1Tm48jZoCFME8fbMMdprWS4"})]}),"\n",(0,o.jsx)(t.admonition,{title:"existing users upgrading.",type:"note",children:(0,o.jsx)(t.p,{children:"If you're upgrading from Chirpstack version 4.7 or less first disable this connector until you run\nthe manual command required to migrate the session keys from redis to postgresql. otherwise if a\nsync occurs before you do this your device session keys maybe removed from the helium packet router."})}),"\n",(0,o.jsx)(t.h2,{id:"project-thanks",children:"Project Thanks"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mawdegroot",children:"groot"})," - For getting python working with helium-crypto.rs and\nhelium/proto so changes could be made programmatically over the wire. This allowed for getting the\ninitial rpc working for signing changes\n",(0,o.jsx)(t.a,{href:"https://github.com/mawdegroot/helium-iot-config-py",children:"helium-iot-config-py"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"jerm - For helping me with reading, writing and signing as well ads delegate key byte related\nquestions for helium crypto related stuff."}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://www.helium.foundation/",children:"Helium Foundation"})," & Helium IOT Working Group - For approving an\ngrant for the initial development work."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);